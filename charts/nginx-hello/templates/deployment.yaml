apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nginx-hello.fullname" . }}
  namespace: {{ .Values.namespace.name }}
  labels:
    app.kubernetes.io/name: {{ include "nginx-hello.name" . }}
    helm.sh/chart: {{ include "nginx-hello.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "nginx-hello.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 2                                  
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "nginx-hello.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      hostAliases:
      - ip: "{{ .Values.hostAliases.vaultPrimary.ip }}"
        hostnames:
        - "{{ .Values.hostAliases.vaultPrimary.name }}"
      - ip: "{{ .Values.hostAliases.vaultTransit.ip }}"
        hostnames:
        - "{{ .Values.hostAliases.vaultTransit.name }}"
      - ip: "{{ .Values.hostAliases.k8sApiServerProxmox.ip }}"
        hostnames:
        - "{{ .Values.hostAliases.k8sApiServerProxmox.name }}"
      - ip: "{{ .Values.hostAliases.k8sApiServerK3d.ip }}"
        hostnames:
        - "{{ .Values.hostAliases.k8sApiServerK3d.name }}"
      - ip: "{{ .Values.hostAliases.nas.ip }}"
        hostnames:
        - "{{ .Values.hostAliases.nas.name }}"
      serviceAccountName: "{{ .Values.serviceAccountName | default "default" }}"
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          #securityContext:
          #  runAsUser: {{ .Values.securityContext.runAsUser }}
          #  runAsGroup: {{ .Values.securityContext.runAsGroup }}
          lifecycle:
            preStop:
              exec:
                command: [
                  "sh", "-c",
                  "sleep 5 && /usr/sbin/nginx -s quit",
                ]
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
